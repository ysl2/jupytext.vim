jupytext.vim.txt

================================================================================
CONTENTS                                                   *jupytext-contents*

1. jupytext.vim........................................|jupytext-jupytext.vim|
    1.1. Installation..................................|jupytext-installation|
    1.2. Usage................................................|jupytext-usage|
    1.3. Configuration................................|jupytext-configuration|

================================================================================
JUPYTEXT.VIM                                           *jupytext-jupytext.vim*

Vim (http://www.vim.org)/Neovim (https://neovim.io) plugin for editing Jupyter notebook (http://jupyter.org) (ipynb) files through jupytext (https://github.com/mwouts/jupytext).

https://www.vim.org/scripts/script.php?script_id=5764

--------------------------------------------------------------------------------
INSTALLATION                                           *jupytext-installation*

1.  Make sure that you have the `jupytext` CLI program installed ().
2.  Copy the `jupytext.vim` script to your vim plugin directory (e.g. `$HOME/.vim/plugin`). Refer to ,  and  for more details about Vim plugins.
3.  Restart Vim.

--------------------------------------------------------------------------------
USAGE                                                         *jupytext-usage*

When you open a Jupyter Notebook (`*.ipynb`) file, it is automatically converted from json to markdown or python through the `jupytext` utility (https://github.com/mwouts/jupytext), and the result is loaded into the buffer. Upon saving, the `ipynb` file is updated with any modifications.

In more detail, opening a file `notebook.ipynb` in vim will create a temporary file `notebook.md` or `notebook.py` (depending on `g:jupytext_fmt`). This file is the result of calling e.g.
>
    jupytext --to=md --output notebook.md notebook.ipynb
<



The contents of the file is loaded into the buffer instead of the original `notebook.ipynb`. When saving the buffer, its contents is written again to `notebook.md`, and the original `notebook.ipynb` is updated with a call to
>
    jupytext --to=ipynb --from=md --update --output notebook.ipynb notebook.md
<

The `--update` flag ensures the output for any cell whose corresponding input in `notebook.md` is unchanged will be preserved.

On closing the buffer, the temporary `notebook.md` will be deleted. If `notebook.md` already existed when opening `notebook.ipynb`, the existing file will be used (instead of being generated by `jupytext`), and it will be preserved when closing the buffer.

--------------------------------------------------------------------------------
CONFIGURATION                                         *jupytext-configuration*

The plugin has the following settings. If you want to override the default values shown below, you can define the corresponding variables in your `~/.vimrc`.

*     You may disable the automatic conversion of `ipynb` files (i.e., deactivate this plugin) by setting this to 0.
*     The CLI `jupytext` command to use. You may include the full path to point to a specific `jupytext` executable not in your default `$PATH`.
*     The format to which to convert the `ipynb` data. This can be any format that the `jupytext` utility accepts for its `--to` parameter (see ), except for `'notebook'` and `'ipynb'`.
* 
Command line options for the conversion from `g:jupytext_fmt` back to the notebook format

*     A mapping of `g:jupytext_fmt` to the filetype that should be used for the buffer (). This determines the syntax highlighting.  You may use this setting to override the default filetype. For example, to use the 'pandoc' filetype instead of the default 'markdown' for the 'md' format, define
>
        let g:jupytext_filetype_map = {'md': 'pandoc'}
<
*     If set to 1, print debug messages while running the plugin (view with `:messages`).

Note: If you are using this plugin as a replacement for the `ipynb_notedown.vim` plugin (https://github.com/goerz/ipynb_notedown.vim) (https://www.vim.org/scripts/script.php?script_id=5506), you can use the following options to use `notedown` (https://github.com/aaren/notedown) instead of `jupytext` (https://github.com/mwouts/jupytext):
>
    let g:jupytext_command = 'notedown'
    let g:jupytext_fmt = 'markdown'
    let g:jupytext_to_ipynb_opts = '--to=notebook'
<

 vim:tw=78:ts=8:ft=help:norl:
